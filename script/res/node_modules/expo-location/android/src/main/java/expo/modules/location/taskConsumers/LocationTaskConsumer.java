package expo.modules.location.taskConsumers;

import android.app.job.JobParameters;
import android.app.job.JobService;
import android.content.Context;
import android.content.Intent;
import expo.modules.core.interfaces.LifecycleEventListener;

import java.util.Map;

import expo.modules.interfaces.taskManager.TaskConsumer;
import expo.modules.interfaces.taskManager.TaskConsumerInterface;
import expo.modules.interfaces.taskManager.TaskInterface;
import expo.modules.interfaces.taskManager.TaskManagerUtilsInterface;

public class LocationTaskConsumer extends TaskConsumer implements TaskConsumerInterface, LifecycleEventListener {

  public LocationTaskConsumer(Context context, TaskManagerUtilsInterface taskManagerUtils) {
    super(context, taskManagerUtils);
  }

  //region TaskConsumerInterface

  public String taskType() {
    return "location";
  }

  @Override
  public void didRegister(TaskInterface task) {
  }

  @Override
  public void didUnregister() {
  }

  @Override
  public void setOptions(Map<String, Object> options) {
  }

  @Override
  public void didReceiveBroadcast(Intent intent) {
  }

  @Override
  public boolean didExecuteJob(final JobService jobService, final JobParameters params) {
    return false;
  }

  public static boolean shouldUseForegroundService(Map<String, Object> options) {
    return false;
  }

  @Override
  public void onHostResume() {
  }

  @Override
  public void onHostPause() {
  }

  @Override
  public void onHostDestroy() {
  }

  //endregion
}
