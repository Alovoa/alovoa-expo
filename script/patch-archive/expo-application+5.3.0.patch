diff --git a/node_modules/expo-application/.eslintrc.js b/node_modules/expo-application/.eslintrc.js
deleted file mode 100644
index 2720197..0000000
--- a/node_modules/expo-application/.eslintrc.js
+++ /dev/null
@@ -1,2 +0,0 @@
-// @generated by expo-module-scripts
-module.exports = require('expo-module-scripts/eslintrc.base.js');
diff --git a/node_modules/expo-application/LICENSE b/node_modules/expo-application/LICENSE
new file mode 100644
index 0000000..30b20e3
--- /dev/null
+++ b/node_modules/expo-application/LICENSE
@@ -0,0 +1,21 @@
+The MIT License (MIT)
+
+Copyright (c) 2015-present 650 Industries, Inc. (aka Expo)
+
+Permission is hereby granted, free of charge, to any person obtaining a copy
+of this software and associated documentation files (the "Software"), to deal
+in the Software without restriction, including without limitation the rights
+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the Software is
+furnished to do so, subject to the following conditions:
+
+The above copyright notice and this permission notice shall be included in all
+copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+SOFTWARE.
diff --git a/node_modules/expo-application/android/build.gradle b/node_modules/expo-application/android/build.gradle
index 48cd076..1523243 100644
--- a/node_modules/expo-application/android/build.gradle
+++ b/node_modules/expo-application/android/build.gradle
@@ -82,7 +82,7 @@ android {
 dependencies {
   implementation project(':expo-modules-core')
 
-  implementation 'com.android.installreferrer:installreferrer:1.0'
+  // implementation 'com.android.installreferrer:installreferrer:1.0'
   implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${getKotlinVersion()}"
 
   if (project.findProject(':expo-modules-test-core')) {
diff --git a/node_modules/expo-application/android/src/main/java/expo/modules/application/ApplicationModule.kt b/node_modules/expo-application/android/src/main/java/expo/modules/application/ApplicationModule.kt
index 8d63e9b..a2f8fd4 100644
--- a/node_modules/expo-application/android/src/main/java/expo/modules/application/ApplicationModule.kt
+++ b/node_modules/expo-application/android/src/main/java/expo/modules/application/ApplicationModule.kt
@@ -9,8 +9,8 @@ import android.os.RemoteException
 import android.provider.Settings
 import android.util.Log
 
-import com.android.installreferrer.api.InstallReferrerClient
-import com.android.installreferrer.api.InstallReferrerStateListener
+//import com.android.installreferrer.api.InstallReferrerClient
+//import com.android.installreferrer.api.InstallReferrerStateListener
 
 import expo.modules.core.ExportedModule
 import expo.modules.core.ModuleRegistry
@@ -90,6 +90,7 @@ class ApplicationModule(private val mContext: Context) : ExportedModule(mContext
 
   @ExpoMethod
   fun getInstallReferrerAsync(promise: Promise) {
+    /*
     val installReferrer = StringBuilder()
     val referrerClient = InstallReferrerClient.newBuilder(mContext).build()
     referrerClient.startConnection(object : InstallReferrerStateListener {
@@ -119,6 +120,8 @@ class ApplicationModule(private val mContext: Context) : ExportedModule(mContext
         promise.reject("ERR_APPLICATION_INSTALL_REFERRER_SERVICE_DISCONNECTED", "Connection to install referrer service was lost.")
       }
     })
+     */
+    promise.reject("ERR_APPLICATION_INSTALL_REFERRER_SERVICE_DISCONNECTED", "Connection to install referrer service was lost.")
   }
 
   companion object {
diff --git a/node_modules/expo-application/build/Application.d.ts b/node_modules/expo-application/build/Application.d.ts
deleted file mode 100644
index cbca9fe..0000000
--- a/node_modules/expo-application/build/Application.d.ts
+++ /dev/null
@@ -1,133 +0,0 @@
-/**
- * The human-readable version of the native application that may be displayed in the app store.
- * This is the `Info.plist` value for `CFBundleShortVersionString` on iOS and the version name set
- * by `version` in `app.json` on Android at the time the native app was built.
- * On web, this value is `null`.
- * @example `"2.11.0"`
- */
-export declare const nativeApplicationVersion: string | null;
-/**
- * The internal build version of the native application that the app store may use to distinguish
- * between different binaries. This is the `Info.plist` value for `CFBundleVersion` on iOS (set with
- * `ios.buildNumber` value in `app.json` in a standalone app) and the version code set by
- * `android.versionCode` in `app.json` on Android at the time the native app was built. On web, this
- * value is `null`. The return type on Android and iOS is `string`.
- * @example iOS: `"2.11.0"`, Android: `"114"`
- */
-export declare const nativeBuildVersion: string | null;
-/**
- * The human-readable name of the application that is displayed with the app's icon on the device's
- * home screen or desktop. On Android and iOS, this value is a `string` unless the name could not be
- * retrieved, in which case this value will be `null`. On web this value is `null`.
- * @example `"Expo"`, `"Yelp"`, `"Instagram"`
- */
-export declare const applicationName: string | null;
-/**
- * The ID of the application. On Android, this is the application ID. On iOS, this is the bundle ID.
- * On web, this is `null`.
- * @example `"com.cocoacasts.scribbles"`, `"com.apple.Pages"`
- */
-export declare const applicationId: string | null;
-/**
- * The value of [`Settings.Secure.ANDROID_ID`](https://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID).
- * This is a hexadecimal `string` unique to each combination of app-signing key, user, and device.
- * The value may change if a factory reset is performed on the device or if an APK signing key changes.
- * For more information about how the platform handles `ANDROID_ID` in Android 8.0 (API level 26)
- * and higher, see [Android 8.0 Behavior Changes](https://developer.android.com/about/versions/oreo/android-8.0-changes.html#privacy-all).
- * On iOS and web, this value is `null`.
- * > In versions of the platform lower than Android 8.0 (API level 26), this value remains constant
- * > for the lifetime of the user's device. See the [ANDROID_ID](https://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID)
- * > official docs for more information.
- * @example `"dd96dec43fb81c97"`
- * @platform android
- */
-export declare const androidId: string | null;
-/**
- * Gets the referrer URL of the installed app with the [`Install Referrer API`](https://developer.android.com/google/play/installreferrer)
- * from the Google Play Store. In practice, the referrer URL may not be a complete, absolute URL.
- * @return A `Promise` that fulfills with a `string` of the referrer URL of the installed app.
- *
- * @example
- * ```ts
- * await Application.getInstallReferrerAsync();
- * // "utm_source=google-play&utm_medium=organic"
- * ```
- * @platform android
- */
-export declare function getInstallReferrerAsync(): Promise<string>;
-/**
- * Gets the iOS "identifier for vendor" ([IDFV](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor))
- * value, a string ID that uniquely identifies a device to the appâ€™s vendor. This method may
- * sometimes return `nil`, in which case wait and call the method again later. This might happen
- * when the device has been restarted before the user has unlocked the device.
- *
- * The OS will change the vendor identifier if all apps from the current app's vendor have been
- * uninstalled.
- *
- * @return A `Promise` that fulfills with a `string` specifying the app's vendor ID. Apps from the
- * same vendor will return the same ID. See Apple's documentation for more information about the
- * vendor ID's semantics.
- *
- * @example
- * ```ts
- * await Application.getIosIdForVendorAsync();
- * // "68753A44-4D6F-1226-9C60-0050E4C00067"
- * ```
- * @platform ios
- */
-export declare function getIosIdForVendorAsync(): Promise<string | null>;
-export declare enum ApplicationReleaseType {
-    UNKNOWN = 0,
-    SIMULATOR = 1,
-    ENTERPRISE = 2,
-    DEVELOPMENT = 3,
-    AD_HOC = 4,
-    APP_STORE = 5
-}
-/**
- * Gets the iOS application release type.
- * @return Returns a promise which fulfills with an [`ApplicationReleaseType`](#applicationreleasetype).
- * @platform ios
- */
-export declare function getIosApplicationReleaseTypeAsync(): Promise<ApplicationReleaseType>;
-export type PushNotificationServiceEnvironment = 'development' | 'production' | null;
-/**
- * Gets the current [Apple Push Notification (APN)](https://developer.apple.com/documentation/bundleresources/entitlements/aps-environment?language=objc)
- * service environment.
- * @return Returns a promise fulfilled with the string, either `'development'` or `'production'`,
- * based on the current APN environment, or `null` on the simulator as it does not support registering with APNs.
- * @platform ios
- */
-export declare function getIosPushNotificationServiceEnvironmentAsync(): Promise<PushNotificationServiceEnvironment>;
-/**
- * Gets the time the app was installed onto the device, not counting subsequent updates. If the app
- * is uninstalled and reinstalled, this method returns the time the app was reinstalled.
- * - On iOS, this method uses the [`NSFileCreationDate`](https://developer.apple.com/documentation/foundation/nsfilecreationdate?language=objc)
- * of the app's document root directory.
- * - On Android, this method uses [`PackageInfo.firstInstallTime`](https://developer.android.com/reference/android/content/pm/PackageInfo.html#firstInstallTime).
- * - On web, this method returns `null`.
- *
- * @return Returns a `Promise` that fulfills with a `Date` object that specifies the time the app
- * was installed on the device.
- *
- * @example
- * ```ts
- * await Application.getInstallationTimeAsync();
- * // 2019-07-18T18:08:26.121Z
- * ```
- */
-export declare function getInstallationTimeAsync(): Promise<Date>;
-/**
- * Gets the last time the app was updated from the Google Play Store.
- * @return Returns a `Promise` that fulfills with a `Date` object that specifies the last time
- * the app was updated via the Google Play Store).
- *
- * @example
- * ```ts
- * await Application.getLastUpdateTimeAsync();
- * // 2019-07-18T21:20:16.887Z
- * ```
- * @platform android
- */
-export declare function getLastUpdateTimeAsync(): Promise<Date>;
-//# sourceMappingURL=Application.d.ts.map
\ No newline at end of file
diff --git a/node_modules/expo-application/build/Application.d.ts.map b/node_modules/expo-application/build/Application.d.ts.map
deleted file mode 100644
index 681af25..0000000
--- a/node_modules/expo-application/build/Application.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"Application.d.ts","sourceRoot":"","sources":["../src/Application.ts"],"names":[],"mappings":"AAKA;;;;;;GAMG;AACH,eAAO,MAAM,wBAAwB,EAAE,MAAM,GAAG,IAExC,CAAC;AAGT;;;;;;;GAOG;AACH,eAAO,MAAM,kBAAkB,EAAE,MAAM,GAAG,IAElC,CAAC;AAGT;;;;;GAKG;AACH,eAAO,MAAM,eAAe,EAAE,MAAM,GAAG,IAE/B,CAAC;AAGT;;;;GAIG;AACH,eAAO,MAAM,aAAa,EAAE,MAAM,GAAG,IAE7B,CAAC;AAGT;;;;;;;;;;;;GAYG;AACH,eAAO,MAAM,SAAS,EAAE,MAAM,GAAG,IAAiE,CAAC;AAGnG;;;;;;;;;;;GAWG;AACH,wBAAsB,uBAAuB,IAAI,OAAO,CAAC,MAAM,CAAC,CAK/D;AAGD;;;;;;;;;;;;;;;;;;;GAmBG;AACH,wBAAsB,sBAAsB,IAAI,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,CAKrE;AAGD,oBAAY,sBAAsB;IAChC,OAAO,IAAI;IACX,SAAS,IAAI;IACb,UAAU,IAAI;IACd,WAAW,IAAI;IACf,MAAM,IAAI;IACV,SAAS,IAAI;CACd;AAGD;;;;GAIG;AACH,wBAAsB,iCAAiC,IAAI,OAAO,CAAC,sBAAsB,CAAC,CAKzF;AAGD,MAAM,MAAM,kCAAkC,GAAG,aAAa,GAAG,YAAY,GAAG,IAAI,CAAC;AAGrF;;;;;;GAMG;AACH,wBAAsB,6CAA6C,IAAI,OAAO,CAAC,kCAAkC,CAAC,CAKjH;AAGD;;;;;;;;;;;;;;;;GAgBG;AACH,wBAAsB,wBAAwB,IAAI,OAAO,CAAC,IAAI,CAAC,CAM9D;AAGD;;;;;;;;;;;GAWG;AACH,wBAAsB,sBAAsB,IAAI,OAAO,CAAC,IAAI,CAAC,CAM5D"}
\ No newline at end of file
diff --git a/node_modules/expo-application/build/Application.js b/node_modules/expo-application/build/Application.js
deleted file mode 100644
index c771294..0000000
--- a/node_modules/expo-application/build/Application.js
+++ /dev/null
@@ -1,187 +0,0 @@
-import { UnavailabilityError } from 'expo-modules-core';
-import ExpoApplication from './ExpoApplication';
-// @needsAudit
-/**
- * The human-readable version of the native application that may be displayed in the app store.
- * This is the `Info.plist` value for `CFBundleShortVersionString` on iOS and the version name set
- * by `version` in `app.json` on Android at the time the native app was built.
- * On web, this value is `null`.
- * @example `"2.11.0"`
- */
-export const nativeApplicationVersion = ExpoApplication
-    ? ExpoApplication.nativeApplicationVersion || null
-    : null;
-// @needsAudit
-/**
- * The internal build version of the native application that the app store may use to distinguish
- * between different binaries. This is the `Info.plist` value for `CFBundleVersion` on iOS (set with
- * `ios.buildNumber` value in `app.json` in a standalone app) and the version code set by
- * `android.versionCode` in `app.json` on Android at the time the native app was built. On web, this
- * value is `null`. The return type on Android and iOS is `string`.
- * @example iOS: `"2.11.0"`, Android: `"114"`
- */
-export const nativeBuildVersion = ExpoApplication
-    ? ExpoApplication.nativeBuildVersion || null
-    : null;
-// @needsAudit
-/**
- * The human-readable name of the application that is displayed with the app's icon on the device's
- * home screen or desktop. On Android and iOS, this value is a `string` unless the name could not be
- * retrieved, in which case this value will be `null`. On web this value is `null`.
- * @example `"Expo"`, `"Yelp"`, `"Instagram"`
- */
-export const applicationName = ExpoApplication
-    ? ExpoApplication.applicationName || null
-    : null;
-// @needsAudit
-/**
- * The ID of the application. On Android, this is the application ID. On iOS, this is the bundle ID.
- * On web, this is `null`.
- * @example `"com.cocoacasts.scribbles"`, `"com.apple.Pages"`
- */
-export const applicationId = ExpoApplication
-    ? ExpoApplication.applicationId || null
-    : null;
-// @needsAudit
-/**
- * The value of [`Settings.Secure.ANDROID_ID`](https://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID).
- * This is a hexadecimal `string` unique to each combination of app-signing key, user, and device.
- * The value may change if a factory reset is performed on the device or if an APK signing key changes.
- * For more information about how the platform handles `ANDROID_ID` in Android 8.0 (API level 26)
- * and higher, see [Android 8.0 Behavior Changes](https://developer.android.com/about/versions/oreo/android-8.0-changes.html#privacy-all).
- * On iOS and web, this value is `null`.
- * > In versions of the platform lower than Android 8.0 (API level 26), this value remains constant
- * > for the lifetime of the user's device. See the [ANDROID_ID](https://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID)
- * > official docs for more information.
- * @example `"dd96dec43fb81c97"`
- * @platform android
- */
-export const androidId = ExpoApplication ? ExpoApplication.androidId || null : null;
-// @needsAudit
-/**
- * Gets the referrer URL of the installed app with the [`Install Referrer API`](https://developer.android.com/google/play/installreferrer)
- * from the Google Play Store. In practice, the referrer URL may not be a complete, absolute URL.
- * @return A `Promise` that fulfills with a `string` of the referrer URL of the installed app.
- *
- * @example
- * ```ts
- * await Application.getInstallReferrerAsync();
- * // "utm_source=google-play&utm_medium=organic"
- * ```
- * @platform android
- */
-export async function getInstallReferrerAsync() {
-    if (!ExpoApplication.getInstallReferrerAsync) {
-        throw new UnavailabilityError('expo-application', 'getInstallReferrerAsync');
-    }
-    return await ExpoApplication.getInstallReferrerAsync();
-}
-// @needsAudit
-/**
- * Gets the iOS "identifier for vendor" ([IDFV](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor))
- * value, a string ID that uniquely identifies a device to the appâ€™s vendor. This method may
- * sometimes return `nil`, in which case wait and call the method again later. This might happen
- * when the device has been restarted before the user has unlocked the device.
- *
- * The OS will change the vendor identifier if all apps from the current app's vendor have been
- * uninstalled.
- *
- * @return A `Promise` that fulfills with a `string` specifying the app's vendor ID. Apps from the
- * same vendor will return the same ID. See Apple's documentation for more information about the
- * vendor ID's semantics.
- *
- * @example
- * ```ts
- * await Application.getIosIdForVendorAsync();
- * // "68753A44-4D6F-1226-9C60-0050E4C00067"
- * ```
- * @platform ios
- */
-export async function getIosIdForVendorAsync() {
-    if (!ExpoApplication.getIosIdForVendorAsync) {
-        throw new UnavailabilityError('expo-application', 'getIosIdForVendorAsync');
-    }
-    return (await ExpoApplication.getIosIdForVendorAsync()) ?? null;
-}
-// @docsMissing
-export var ApplicationReleaseType;
-(function (ApplicationReleaseType) {
-    ApplicationReleaseType[ApplicationReleaseType["UNKNOWN"] = 0] = "UNKNOWN";
-    ApplicationReleaseType[ApplicationReleaseType["SIMULATOR"] = 1] = "SIMULATOR";
-    ApplicationReleaseType[ApplicationReleaseType["ENTERPRISE"] = 2] = "ENTERPRISE";
-    ApplicationReleaseType[ApplicationReleaseType["DEVELOPMENT"] = 3] = "DEVELOPMENT";
-    ApplicationReleaseType[ApplicationReleaseType["AD_HOC"] = 4] = "AD_HOC";
-    ApplicationReleaseType[ApplicationReleaseType["APP_STORE"] = 5] = "APP_STORE";
-})(ApplicationReleaseType || (ApplicationReleaseType = {}));
-// @needsAudit
-/**
- * Gets the iOS application release type.
- * @return Returns a promise which fulfills with an [`ApplicationReleaseType`](#applicationreleasetype).
- * @platform ios
- */
-export async function getIosApplicationReleaseTypeAsync() {
-    if (!ExpoApplication.getApplicationReleaseTypeAsync) {
-        throw new UnavailabilityError('expo-application', 'getApplicationReleaseTypeAsync');
-    }
-    return await ExpoApplication.getApplicationReleaseTypeAsync();
-}
-// @needsAudit
-/**
- * Gets the current [Apple Push Notification (APN)](https://developer.apple.com/documentation/bundleresources/entitlements/aps-environment?language=objc)
- * service environment.
- * @return Returns a promise fulfilled with the string, either `'development'` or `'production'`,
- * based on the current APN environment, or `null` on the simulator as it does not support registering with APNs.
- * @platform ios
- */
-export async function getIosPushNotificationServiceEnvironmentAsync() {
-    if (!ExpoApplication.getPushNotificationServiceEnvironmentAsync) {
-        throw new UnavailabilityError('expo-application', 'getPushNotificationServiceEnvironmentAsync');
-    }
-    return await ExpoApplication.getPushNotificationServiceEnvironmentAsync();
-}
-// @needsAudit
-/**
- * Gets the time the app was installed onto the device, not counting subsequent updates. If the app
- * is uninstalled and reinstalled, this method returns the time the app was reinstalled.
- * - On iOS, this method uses the [`NSFileCreationDate`](https://developer.apple.com/documentation/foundation/nsfilecreationdate?language=objc)
- * of the app's document root directory.
- * - On Android, this method uses [`PackageInfo.firstInstallTime`](https://developer.android.com/reference/android/content/pm/PackageInfo.html#firstInstallTime).
- * - On web, this method returns `null`.
- *
- * @return Returns a `Promise` that fulfills with a `Date` object that specifies the time the app
- * was installed on the device.
- *
- * @example
- * ```ts
- * await Application.getInstallationTimeAsync();
- * // 2019-07-18T18:08:26.121Z
- * ```
- */
-export async function getInstallationTimeAsync() {
-    if (!ExpoApplication.getInstallationTimeAsync) {
-        throw new UnavailabilityError('expo-application', 'getInstallationTimeAsync');
-    }
-    const installationTime = await ExpoApplication.getInstallationTimeAsync();
-    return new Date(installationTime);
-}
-// @needsAudit
-/**
- * Gets the last time the app was updated from the Google Play Store.
- * @return Returns a `Promise` that fulfills with a `Date` object that specifies the last time
- * the app was updated via the Google Play Store).
- *
- * @example
- * ```ts
- * await Application.getLastUpdateTimeAsync();
- * // 2019-07-18T21:20:16.887Z
- * ```
- * @platform android
- */
-export async function getLastUpdateTimeAsync() {
-    if (!ExpoApplication.getLastUpdateTimeAsync) {
-        throw new UnavailabilityError('expo-application', 'getLastUpdateTimeAsync');
-    }
-    const lastUpdateTime = await ExpoApplication.getLastUpdateTimeAsync();
-    return new Date(lastUpdateTime);
-}
-//# sourceMappingURL=Application.js.map
\ No newline at end of file
diff --git a/node_modules/expo-application/build/Application.js.map b/node_modules/expo-application/build/Application.js.map
deleted file mode 100644
index faecb7e..0000000
--- a/node_modules/expo-application/build/Application.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"Application.js","sourceRoot":"","sources":["../src/Application.ts"],"names":[],"mappings":"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","sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport ExpoApplication from './ExpoApplication';\n\n// @needsAudit\n/**\n * The human-readable version of the native application that may be displayed in the app store.\n * This is the `Info.plist` value for `CFBundleShortVersionString` on iOS and the version name set\n * by `version` in `app.json` on Android at the time the native app was built.\n * On web, this value is `null`.\n * @example `\"2.11.0\"`\n */\nexport const nativeApplicationVersion: string | null = ExpoApplication\n  ? ExpoApplication.nativeApplicationVersion || null\n  : null;\n\n// @needsAudit\n/**\n * The internal build version of the native application that the app store may use to distinguish\n * between different binaries. This is the `Info.plist` value for `CFBundleVersion` on iOS (set with\n * `ios.buildNumber` value in `app.json` in a standalone app) and the version code set by\n * `android.versionCode` in `app.json` on Android at the time the native app was built. On web, this\n * value is `null`. The return type on Android and iOS is `string`.\n * @example iOS: `\"2.11.0\"`, Android: `\"114\"`\n */\nexport const nativeBuildVersion: string | null = ExpoApplication\n  ? ExpoApplication.nativeBuildVersion || null\n  : null;\n\n// @needsAudit\n/**\n * The human-readable name of the application that is displayed with the app's icon on the device's\n * home screen or desktop. On Android and iOS, this value is a `string` unless the name could not be\n * retrieved, in which case this value will be `null`. On web this value is `null`.\n * @example `\"Expo\"`, `\"Yelp\"`, `\"Instagram\"`\n */\nexport const applicationName: string | null = ExpoApplication\n  ? ExpoApplication.applicationName || null\n  : null;\n\n// @needsAudit\n/**\n * The ID of the application. On Android, this is the application ID. On iOS, this is the bundle ID.\n * On web, this is `null`.\n * @example `\"com.cocoacasts.scribbles\"`, `\"com.apple.Pages\"`\n */\nexport const applicationId: string | null = ExpoApplication\n  ? ExpoApplication.applicationId || null\n  : null;\n\n// @needsAudit\n/**\n * The value of [`Settings.Secure.ANDROID_ID`](https://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID).\n * This is a hexadecimal `string` unique to each combination of app-signing key, user, and device.\n * The value may change if a factory reset is performed on the device or if an APK signing key changes.\n * For more information about how the platform handles `ANDROID_ID` in Android 8.0 (API level 26)\n * and higher, see [Android 8.0 Behavior Changes](https://developer.android.com/about/versions/oreo/android-8.0-changes.html#privacy-all).\n * On iOS and web, this value is `null`.\n * > In versions of the platform lower than Android 8.0 (API level 26), this value remains constant\n * > for the lifetime of the user's device. See the [ANDROID_ID](https://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID)\n * > official docs for more information.\n * @example `\"dd96dec43fb81c97\"`\n * @platform android\n */\nexport const androidId: string | null = ExpoApplication ? ExpoApplication.androidId || null : null;\n\n// @needsAudit\n/**\n * Gets the referrer URL of the installed app with the [`Install Referrer API`](https://developer.android.com/google/play/installreferrer)\n * from the Google Play Store. In practice, the referrer URL may not be a complete, absolute URL.\n * @return A `Promise` that fulfills with a `string` of the referrer URL of the installed app.\n *\n * @example\n * ```ts\n * await Application.getInstallReferrerAsync();\n * // \"utm_source=google-play&utm_medium=organic\"\n * ```\n * @platform android\n */\nexport async function getInstallReferrerAsync(): Promise<string> {\n  if (!ExpoApplication.getInstallReferrerAsync) {\n    throw new UnavailabilityError('expo-application', 'getInstallReferrerAsync');\n  }\n  return await ExpoApplication.getInstallReferrerAsync();\n}\n\n// @needsAudit\n/**\n * Gets the iOS \"identifier for vendor\" ([IDFV](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor))\n * value, a string ID that uniquely identifies a device to the appâ€™s vendor. This method may\n * sometimes return `nil`, in which case wait and call the method again later. This might happen\n * when the device has been restarted before the user has unlocked the device.\n *\n * The OS will change the vendor identifier if all apps from the current app's vendor have been\n * uninstalled.\n *\n * @return A `Promise` that fulfills with a `string` specifying the app's vendor ID. Apps from the\n * same vendor will return the same ID. See Apple's documentation for more information about the\n * vendor ID's semantics.\n *\n * @example\n * ```ts\n * await Application.getIosIdForVendorAsync();\n * // \"68753A44-4D6F-1226-9C60-0050E4C00067\"\n * ```\n * @platform ios\n */\nexport async function getIosIdForVendorAsync(): Promise<string | null> {\n  if (!ExpoApplication.getIosIdForVendorAsync) {\n    throw new UnavailabilityError('expo-application', 'getIosIdForVendorAsync');\n  }\n  return (await ExpoApplication.getIosIdForVendorAsync()) ?? null;\n}\n\n// @docsMissing\nexport enum ApplicationReleaseType {\n  UNKNOWN = 0,\n  SIMULATOR = 1,\n  ENTERPRISE = 2,\n  DEVELOPMENT = 3,\n  AD_HOC = 4,\n  APP_STORE = 5,\n}\n\n// @needsAudit\n/**\n * Gets the iOS application release type.\n * @return Returns a promise which fulfills with an [`ApplicationReleaseType`](#applicationreleasetype).\n * @platform ios\n */\nexport async function getIosApplicationReleaseTypeAsync(): Promise<ApplicationReleaseType> {\n  if (!ExpoApplication.getApplicationReleaseTypeAsync) {\n    throw new UnavailabilityError('expo-application', 'getApplicationReleaseTypeAsync');\n  }\n  return await ExpoApplication.getApplicationReleaseTypeAsync();\n}\n\n// @docsMissing\nexport type PushNotificationServiceEnvironment = 'development' | 'production' | null;\n\n// @needsAudit\n/**\n * Gets the current [Apple Push Notification (APN)](https://developer.apple.com/documentation/bundleresources/entitlements/aps-environment?language=objc)\n * service environment.\n * @return Returns a promise fulfilled with the string, either `'development'` or `'production'`,\n * based on the current APN environment, or `null` on the simulator as it does not support registering with APNs.\n * @platform ios\n */\nexport async function getIosPushNotificationServiceEnvironmentAsync(): Promise<PushNotificationServiceEnvironment> {\n  if (!ExpoApplication.getPushNotificationServiceEnvironmentAsync) {\n    throw new UnavailabilityError('expo-application', 'getPushNotificationServiceEnvironmentAsync');\n  }\n  return await ExpoApplication.getPushNotificationServiceEnvironmentAsync();\n}\n\n// @needsAudit\n/**\n * Gets the time the app was installed onto the device, not counting subsequent updates. If the app\n * is uninstalled and reinstalled, this method returns the time the app was reinstalled.\n * - On iOS, this method uses the [`NSFileCreationDate`](https://developer.apple.com/documentation/foundation/nsfilecreationdate?language=objc)\n * of the app's document root directory.\n * - On Android, this method uses [`PackageInfo.firstInstallTime`](https://developer.android.com/reference/android/content/pm/PackageInfo.html#firstInstallTime).\n * - On web, this method returns `null`.\n *\n * @return Returns a `Promise` that fulfills with a `Date` object that specifies the time the app\n * was installed on the device.\n *\n * @example\n * ```ts\n * await Application.getInstallationTimeAsync();\n * // 2019-07-18T18:08:26.121Z\n * ```\n */\nexport async function getInstallationTimeAsync(): Promise<Date> {\n  if (!ExpoApplication.getInstallationTimeAsync) {\n    throw new UnavailabilityError('expo-application', 'getInstallationTimeAsync');\n  }\n  const installationTime = await ExpoApplication.getInstallationTimeAsync();\n  return new Date(installationTime);\n}\n\n// @needsAudit\n/**\n * Gets the last time the app was updated from the Google Play Store.\n * @return Returns a `Promise` that fulfills with a `Date` object that specifies the last time\n * the app was updated via the Google Play Store).\n *\n * @example\n * ```ts\n * await Application.getLastUpdateTimeAsync();\n * // 2019-07-18T21:20:16.887Z\n * ```\n * @platform android\n */\nexport async function getLastUpdateTimeAsync(): Promise<Date> {\n  if (!ExpoApplication.getLastUpdateTimeAsync) {\n    throw new UnavailabilityError('expo-application', 'getLastUpdateTimeAsync');\n  }\n  const lastUpdateTime = await ExpoApplication.getLastUpdateTimeAsync();\n  return new Date(lastUpdateTime);\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/expo-application/build/Application.types.d.ts b/node_modules/expo-application/build/Application.types.d.ts
deleted file mode 100644
index 0dd848c..0000000
--- a/node_modules/expo-application/build/Application.types.d.ts
+++ /dev/null
@@ -1 +0,0 @@
-//# sourceMappingURL=Application.types.d.ts.map
\ No newline at end of file
diff --git a/node_modules/expo-application/build/Application.types.d.ts.map b/node_modules/expo-application/build/Application.types.d.ts.map
deleted file mode 100644
index 5c8f3e9..0000000
--- a/node_modules/expo-application/build/Application.types.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"Application.types.d.ts","sourceRoot":"","sources":["../src/Application.types.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/expo-application/build/Application.types.js b/node_modules/expo-application/build/Application.types.js
deleted file mode 100644
index bb8a8b7..0000000
--- a/node_modules/expo-application/build/Application.types.js
+++ /dev/null
@@ -1 +0,0 @@
-//# sourceMappingURL=Application.types.js.map
\ No newline at end of file
diff --git a/node_modules/expo-application/build/Application.types.js.map b/node_modules/expo-application/build/Application.types.js.map
deleted file mode 100644
index 72e27b3..0000000
--- a/node_modules/expo-application/build/Application.types.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"Application.types.js","sourceRoot":"","sources":["../src/Application.types.ts"],"names":[],"mappings":"","sourcesContent":[""]}
\ No newline at end of file
diff --git a/node_modules/expo-application/build/ExpoApplication.d.ts b/node_modules/expo-application/build/ExpoApplication.d.ts
deleted file mode 100644
index 7fb59aa..0000000
--- a/node_modules/expo-application/build/ExpoApplication.d.ts
+++ /dev/null
@@ -1,3 +0,0 @@
-declare const _default: import("expo-modules-core").ProxyNativeModule;
-export default _default;
-//# sourceMappingURL=ExpoApplication.d.ts.map
\ No newline at end of file
diff --git a/node_modules/expo-application/build/ExpoApplication.d.ts.map b/node_modules/expo-application/build/ExpoApplication.d.ts.map
deleted file mode 100644
index 9bc69da..0000000
--- a/node_modules/expo-application/build/ExpoApplication.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"ExpoApplication.d.ts","sourceRoot":"","sources":["../src/ExpoApplication.ts"],"names":[],"mappings":";AACA,wBAAkD"}
\ No newline at end of file
diff --git a/node_modules/expo-application/build/ExpoApplication.js b/node_modules/expo-application/build/ExpoApplication.js
deleted file mode 100644
index ce63714..0000000
--- a/node_modules/expo-application/build/ExpoApplication.js
+++ /dev/null
@@ -1,3 +0,0 @@
-import { NativeModulesProxy } from 'expo-modules-core';
-export default NativeModulesProxy.ExpoApplication;
-//# sourceMappingURL=ExpoApplication.js.map
\ No newline at end of file
diff --git a/node_modules/expo-application/build/ExpoApplication.js.map b/node_modules/expo-application/build/ExpoApplication.js.map
deleted file mode 100644
index 5e3306f..0000000
--- a/node_modules/expo-application/build/ExpoApplication.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"ExpoApplication.js","sourceRoot":"","sources":["../src/ExpoApplication.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,MAAM,mBAAmB,CAAC;AACvD,eAAe,kBAAkB,CAAC,eAAe,CAAC","sourcesContent":["import { NativeModulesProxy } from 'expo-modules-core';\nexport default NativeModulesProxy.ExpoApplication;\n"]}
\ No newline at end of file
diff --git a/node_modules/expo-application/build/ExpoApplication.web.d.ts b/node_modules/expo-application/build/ExpoApplication.web.d.ts
deleted file mode 100644
index a9bd1ad..0000000
--- a/node_modules/expo-application/build/ExpoApplication.web.d.ts
+++ /dev/null
@@ -1,11 +0,0 @@
-declare const _default: {
-    readonly name: string;
-    readonly applicationName: null;
-    readonly bundleId: null;
-    readonly nativeApplicationVersion: null;
-    readonly nativeBuildVersion: null;
-    readonly androidId: null;
-    getInstallationTimeAsync(): Promise<null>;
-};
-export default _default;
-//# sourceMappingURL=ExpoApplication.web.d.ts.map
\ No newline at end of file
diff --git a/node_modules/expo-application/build/ExpoApplication.web.d.ts.map b/node_modules/expo-application/build/ExpoApplication.web.d.ts.map
deleted file mode 100644
index 70980b9..0000000
--- a/node_modules/expo-application/build/ExpoApplication.web.d.ts.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"ExpoApplication.web.d.ts","sourceRoot":"","sources":["../src/ExpoApplication.web.ts"],"names":[],"mappings":";;;;;;;gCAmBoC,QAAQ,IAAI,CAAC;;AAnBjD,wBAsBE"}
\ No newline at end of file
diff --git a/node_modules/expo-application/build/ExpoApplication.web.js b/node_modules/expo-application/build/ExpoApplication.web.js
deleted file mode 100644
index 9dcaf4d..0000000
--- a/node_modules/expo-application/build/ExpoApplication.web.js
+++ /dev/null
@@ -1,24 +0,0 @@
-export default {
-    get name() {
-        return 'ExpoApplication';
-    },
-    get applicationName() {
-        return null;
-    },
-    get bundleId() {
-        return null;
-    },
-    get nativeApplicationVersion() {
-        return null;
-    },
-    get nativeBuildVersion() {
-        return null;
-    },
-    get androidId() {
-        return null;
-    },
-    async getInstallationTimeAsync() {
-        return null;
-    },
-};
-//# sourceMappingURL=ExpoApplication.web.js.map
\ No newline at end of file
diff --git a/node_modules/expo-application/build/ExpoApplication.web.js.map b/node_modules/expo-application/build/ExpoApplication.web.js.map
deleted file mode 100644
index 082b6b8..0000000
--- a/node_modules/expo-application/build/ExpoApplication.web.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"ExpoApplication.web.js","sourceRoot":"","sources":["../src/ExpoApplication.web.ts"],"names":[],"mappings":"AAAA,eAAe;IACb,IAAI,IAAI;QACN,OAAO,iBAAiB,CAAC;IAC3B,CAAC;IACD,IAAI,eAAe;QACjB,OAAO,IAAI,CAAC;IACd,CAAC;IACD,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC;IACd,CAAC;IACD,IAAI,wBAAwB;QAC1B,OAAO,IAAI,CAAC;IACd,CAAC;IACD,IAAI,kBAAkB;QACpB,OAAO,IAAI,CAAC;IACd,CAAC;IACD,IAAI,SAAS;QACX,OAAO,IAAI,CAAC;IACd,CAAC;IACD,KAAK,CAAC,wBAAwB;QAC5B,OAAO,IAAI,CAAC;IACd,CAAC;CACF,CAAC","sourcesContent":["export default {\n  get name(): string {\n    return 'ExpoApplication';\n  },\n  get applicationName(): null {\n    return null;\n  },\n  get bundleId(): null {\n    return null;\n  },\n  get nativeApplicationVersion(): null {\n    return null;\n  },\n  get nativeBuildVersion(): null {\n    return null;\n  },\n  get androidId(): null {\n    return null;\n  },\n  async getInstallationTimeAsync(): Promise<null> {\n    return null;\n  },\n};\n"]}
\ No newline at end of file
